# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import seq2seq_service_pb2 as seq2seq__service__pb2


class Seq2SeqServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RespondToText = channel.unary_unary(
        '/Seq2SeqGRPC.Seq2SeqService/RespondToText',
        request_serializer=seq2seq__service__pb2.ConversationInput.SerializeToString,
        response_deserializer=seq2seq__service__pb2.ConversationResponse.FromString,
        )


class Seq2SeqServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def RespondToText(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_Seq2SeqServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RespondToText': grpc.unary_unary_rpc_method_handler(
          servicer.RespondToText,
          request_deserializer=seq2seq__service__pb2.ConversationInput.FromString,
          response_serializer=seq2seq__service__pb2.ConversationResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Seq2SeqGRPC.Seq2SeqService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
